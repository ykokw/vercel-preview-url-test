name: Playwright Tests
on:
  workflow_dispatch:
  issue_comment:
    types: [created]
#  push:
#    branches: [main]
#  pull_request_target:
#    branches: [main]
#    types:
#      - opened
#      - reopened
#      - synchronize

env:
  IS_PULL_REQUEST_COMMENT: ${{ github.event_name == 'issue_comment' && github.event.issue.pull_request && contains(github.event.comment.body, '/run-ui-test') }}

jobs:
  find-vercel-preview-url:
    timeout-minutes: 5
    name: Find Vercel Preview URL
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      statuses: write
    outputs:
      vercel_preview_url: "https://${{ steps.find-vercel-preview-url.outputs.preview_url }}"
      latest_commit_sha: ${{ steps.set_latest_commit_sha.outputs.latest_commit_sha }}
    if: |
      github.event_name == 'workflow_dispatch' ||
      ( github.event_name == 'issue_comment' &&
        github.event.issue.pull_request &&
        contains(github.event.comment.body, '/run-ui-test') )
    steps:
      - name: Echo ref name
        run: echo "ref_name=${{ github.ref_name }}"
      - name: Add reaction to pull request comment
        uses: actions/github-script@v7
        if: ${{ env.IS_PULL_REQUEST_COMMENT == 'true' }}
        with:
          script: |
            github.rest.reactions.createForIssueComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: context.payload.comment.id,
              content: 'eyes'
            })
      - name: Get PR details
        id: get_pr_details
        uses: octokit/request-action@v2.x
        if: ${{ env.IS_PULL_REQUEST_COMMENT == 'true' }}
        with:
          route: GET /repos/${{ github.repository }}/pulls/${{ github.event.issue.number }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Set latest commit SHA
        if: ${{ env.IS_PULL_REQUEST_COMMENT == 'true' }}
        id: set_latest_commit_sha
        run: echo "latest_commit_sha=${{ fromJson(steps.get_pr_details.outputs.data).head.sha }}" >> "$GITHUB_OUTPUT"
      - name: Set env for search Preview Deployment URL
        if: steps.get_pr_details.conclusion == 'success'
        run: echo "SEARCH_BRANCH_NAME=${{ fromJson(steps.get_pr_details.outputs.data).head.ref }}" >> $GITHUB_ENV
      - name: Find Vercel Preview URL
        uses: zentered/vercel-preview-url@v1.4.0
        id: find-vercel-preview-url
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
        with:
          vercel_team_id: ${{ secrets.VERCEL_ORG_ID }}
          vercel_project_id: ${{ secrets.VERCEL_PROJECT_ID }}
          vercel_limit: 50
          vercel_state: READY
          vercel_target: preview
      - name: Set failed commit status
        uses: actions/github-script@v7
        if: ${{ failure() && env.IS_PULL_REQUEST_COMMENT == 'true' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ steps.set_latest_commit_sha.outputs.latest_commit_sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              state: '${{ steps.find-vercel-preview-url.conclusion }}',
              description: 'Playwright tests are failed',
              context: 'Playwright tests'
            })

  test:
    timeout-minutes: 15
    runs-on: ubuntu-latest
    needs: [find-vercel-preview-url]
    if: ${{ needs.find-vercel-preview-url.outputs.vercel_preview_url != '' }}
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2]
        shardTotal: [2]
    env:
      VERCEL_PROTECTION_BYPASS: ${{ secrets.VERCEL_PROTECTION_BYPASS }}
      UI_TEST_TARGET_URL: ${{ needs.find-vercel-preview-url.outputs.vercel_preview_url }}
    permissions:
      statuses: write
    steps:
      - name: Set pending commit status
        uses: actions/github-script@v7
        id: set-in-progress-status
        if: ${{ env.IS_PULL_REQUEST_COMMENT == 'true' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ needs.find-vercel-preview-url.outputs.latest_commit_sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              state: 'pending',
              description: 'Running Playwright tests',
              context: 'Playwright tests'
            })
      # see also: https://github.com/actions/checkout/issues/331#issuecomment-1969717208
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event_name == 'issue_comment' && format('refs/pull/{0}/head', github.event.issue.number) || '' }}
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        id: tests-step
        run: npx playwright test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }}
      - uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1
      - name: Set commit status
        uses: actions/github-script@v7
        if: ${{ !cancelled() && env.IS_PULL_REQUEST_COMMENT == 'true' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ needs.find-vercel-preview-url.outputs.latest_commit_sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              state: '${{ steps.tests-step.conclusion }}',
              description: 'Playwright tests are ${{ steps.tests-step.conclusion }}',
              context: 'Playwright test job ${{ matrix.shardIndex }} / ${{ matrix.shardTotal }}'
            })

  merge-reports:
    # Merge reports after playwright-tests, even if some shards have failed
    if: ${{ !cancelled() && needs.find-vercel-preview-url.outputs.vercel_preview_url != '' }}
    needs: [find-vercel-preview-url, test]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      statuses: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: lts/*
      - name: Install dependencies
        run: npm ci

      - name: Download blob reports from GitHub Actions Artifacts
        uses: actions/download-artifact@v4
        with:
          path: all-blob-reports
          pattern: blob-report-*
          merge-multiple: true

      - name: Merge into HTML Report
        run: npx playwright merge-reports --config=playwright-report.config.ts ./all-blob-reports

      - uses: daun/playwright-report-summary@v3
        if: always()
        with:
          report-file: results.json

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: html-report--attempt-${{ github.run_attempt }}
          path: playwright-report
          retention-days: 7
      - name: Set completed commit status
        uses: actions/github-script@v7
        id: set-in-progress-status
        if: ${{ env.IS_PULL_REQUEST_COMMENT == 'true' }}
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            github.rest.repos.createCommitStatus({
              owner: context.repo.owner,
              repo: context.repo.repo,
              sha: '${{ needs.find-vercel-preview-url.outputs.latest_commit_sha }}',
              target_url: 'https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}',
              state: 'success',
              description: 'Completed Playwright tests. see also each job result.',
              context: 'Playwright tests'
            })
